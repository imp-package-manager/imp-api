#! /usr/bin/env ruby

$base = __dir__ + "/../.."
$env

# require the bare minimum to process options
require_relative '../lib/lite'

# load some other common libraries
require_relative '../lib/aura'

Signal.trap('INT') { puts; exit 1 }

$env.conf   = "#$base/config.txt"
$env.conf!  rescue Console.err("unparseable config file")

$env.errs   = "#$base/errors.txt"
$env.aurs   = "#$base/auras/aurs"
$env.pkgs   = "#$base/auras/pkgs"
$env.root   = "#$base/auras/root"
$env.todo   = nil
$env.redo   = false
$env.keep   = false
$env.dump   = false
$env.toor   = false
$env.verb   = false
$env.init!

Console.err("aura tree invalid") unless $env.tree?

$env.dump! if $env.dump?
$env.toor! if $env.toor?

unless $env.todo

  exit if $env.dump? or $env.toor?

  $stderr.puts "provide (one) package as an argument!"
  exit 1

end

# load the lifecycle
require_relative '../lib/install'
