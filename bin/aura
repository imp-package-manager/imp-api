#! /usr/bin/ruby

require 'open-uri'
require 'fileutils'
require_relative '../lib/aura'

env = Environment.new
env.test  = "test/test"
env.temp  = "temp"
env.clean =  true

END {
}

pkgbuild = Pkgbuild.new(File.expand_path("PKGBUILD", env.test))

unless pkgbuild.ok?
  $stderr.puts "pkgbuild?"
  exit 1
end

srcdir = File.expand_path(pkgbuild["pkgname"], env.temp)

if env.clean
  FileUtils.rm_rf(srcdir)
end

unless File.exists? srcdir

  Dir.mkdir(srcdir)
  Dir.chdir(env.test)

  pkgbuild["source"].each do |path|
    Request.new(path, srcdir) rescue
    begin
      $stderr.puts "sauce?"
      exit 1
    end
  end

end

exit

source = pkgbuild["source"]
target = File.expand_path(File.basename(source), env.temp)

unless File.exists? target
  puts "downloading #{source}"
  File.open(target, "w") do |file|
    file << URI.open(source).read
  end

  puts "extracting #{target}"
  `tar -zxvf #{target} -C #{env.temp}`
end

pkgbuild << {"srcdir" => env.temp}

puts pkgbuild["srcdir"]
exit
build = pkgbuild.get("build()")
system(build)
